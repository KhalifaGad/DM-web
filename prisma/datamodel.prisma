type Drug {
  id: ID! @id
  name: String! @unique
  stores: [StoreHaveDrug]!
}

type Store {
  id: ID! @id
  firstName: String!
  lastName: String!
  email: String! @unique
  password: String!
  storeName: String! @unique
  city: String!
  area: String!
  street: String!
  phone: String!
  birthday: DateTime
  logoURL: String
  confirmed: Boolean! @default(value: false)
}

type StoreHaveDrug @embedded {
  store: ID!
  price: Float!
  discount: Float @default(value: 0)
  deferredDiscount: Float @default(value: 0)
  onlyCash: Boolean!
}

enum OrderStatus {
  ACCEPTED
  REFUSED
  ACTIVE
  DELIVERED
  PENDING
}

type Pharmacy {
  id: ID! @id
  firstName: String!
  lastName: String!
  pharmacyName: String!
  email: String! @unique
  password: String!
  code: String! @unique
  lat: Float!
  long: Float!
  city: String @default(value: "unknown")
  area: String @default(value: "unknown")
  street: String @default(value: "unknown")
  wallet: Float @default(value: 0.0)
  phone: String!
  confirmed: Boolean! @default(value: false)
}

type Order {
  id: ID! @id
  from: Pharmacy! @relation(link: INLINE)
  to: Store! @relation(link: INLINE)
  drugsList: [OrderDrugsList!]!
  orderStatus: OrderStatus!
  code: String! @unique
  DMFees: Float! @default(value: 5.0)
  walletDiscount: Float @default(value: 0.0)
  total: Float!
  createdAt: DateTime! @createdAt
  acceptingDate: DateTime
  refusingingDate: DateTime
  deliveringDate: DateTime
  refusingNote: String
}

type OrderDrugsList @embedded {
  drug: Drug! @relation(link: INLINE)
  quantity: Int!
  unitPrice: Float!
  discount: Float!
  total: Float!
}

type Verification {
  id: ID! @id
  code: String! @unique
}
